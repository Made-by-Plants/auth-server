on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: node:14.0.0
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - run: yarn lint
      - name: "Generate test keys for JWT"
        run: |
          openssl genrsa -out private.pem 1024
          openssl rsa -in private.pem -pubout > public.pem
      - run: yarn test
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
          NODE_ENV: test
          SYNCHRONIZE_DB: "true"
